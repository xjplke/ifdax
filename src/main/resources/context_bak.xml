<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
			http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
			http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
			http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">
<!--  no need because  context:component-scan
	<context:annotation-config />
 -->
	<!--
		DATABASE SETUP 
	 -->
<!-- 
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="username" value="sa" />
		<property name="password" value="" />
		<property name="driverClassName" value="org.hsqldb.jdbcDriver" />
		<property name="url" value="jdbc:hsqldb:mem:example" />
	</bean>
 -->	
	<bean id="dataSource" class="org.logicalcobwebs.proxool.ProxoolDataSource">
		<property name="driver" value="com.mysql.jdbc.Driver" />
		<property name="driverUrl"
			value="jdbc:mysql://127.0.0.1:3306/radius?user=radius&amp;password=radius123" />
		<property name="user" value="radius" />
		<property name="password" value="radius123" />
		<property name="alias" value="proxool.dbpool" />
		<property name="houseKeepingSleepTime" value="90000" />
		<property name="prototypeCount" value="5" />
		<property name="maximumConnectionCount" value="1000" />
		<property name="minimumConnectionCount" value="10" />
	</bean>

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="persistenceUnitName" value="examplePU" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="generateDdl" value="true" />
				<property name="showSql" value="true" />
			</bean>
		</property>
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	
	<bean id="newsDao" class="cn.adfi.rbac.dao.news.NewsDaoImpl" />
 	<bean id="userDao" class="cn.adfi.rbac.dao.user.UserDaoImpl" />

	<bean id="searchProcessor" class="com.googlecode.genericdao.search.jpa.JPASearchProcessor">
		<constructor-arg ref="metadataUtil" />
	</bean>

	<bean id="metadataUtil" class="com.googlecode.genericdao.search.jpa.hibernate.HibernateMetadataUtil"
		factory-method="getInstanceForEntityManagerFactory">
		<constructor-arg ref="entityManagerFactory" />
	</bean>
	
	<bean id="dataBaseInitializer" class="cn.adfi.rbac.dao.DataBaseInitializer" init-method="initDataBase">
		<constructor-arg ref="userDao" />
		<constructor-arg ref="newsDao" />
		<constructor-arg ref="passwordEncoder" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />

	<!--
		INIT REST COMPONENTS 
	 -->
	
	<context:component-scan base-package="cn.adfi.rbac.controller" >
		<context:exclude-filter type="regex" expression=".utils.*"/>
	</context:component-scan>
	
	<bean id="objectMapper" class="org.codehaus.jackson.map.ObjectMapper" />
	
	<!-- 
		SPRING SECURITY SETUP
	-->
	
	<bean id="passwordEncoder" class="cn.adfi.rbac.utils.SaltedSHA256PasswordEncoder">
		<constructor-arg value="secret" />
	</bean>
	
	<security:authentication-manager id="authenticationManager">
		<security:authentication-provider user-service-ref="userDao">
			<security:password-encoder ref="passwordEncoder"></security:password-encoder>
		</security:authentication-provider>
	</security:authentication-manager>

	<security:http
			realm="Protected API"
			use-expressions="true"
			auto-config="false"
			create-session="stateless"
			entry-point-ref="unauthorizedEntryPoint"
			authentication-manager-ref="authenticationManager">
		<security:custom-filter ref="authenticationTokenProcessingFilter" position="FORM_LOGIN_FILTER" />
		<security:intercept-url pattern="/rest/user/authenticate" access="permitAll" />
		<security:intercept-url method="GET" pattern="/rest/news/**" access="hasRole('user')" />
		<security:intercept-url method="PUT" pattern="/rest/news/**" access="hasRole('admin')" />
		<security:intercept-url method="POST" pattern="/rest/news/**" access="hasRole('admin')" />
		<security:intercept-url method="DELETE" pattern="/rest/news/**" access="hasRole('admin')" />
	</security:http>

	<bean id="unauthorizedEntryPoint" class="cn.adfi.rbac.controller.utils.UnauthorizedEntryPoint" />

	<bean class="cn.adfi.rbac.controller.utils.AuthenticationTokenProcessingFilter" id="authenticationTokenProcessingFilter">
		<constructor-arg ref="userDao" />
	</bean>

</beans>